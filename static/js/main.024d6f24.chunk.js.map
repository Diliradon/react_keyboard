{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handlePressedKeys","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,WAAY,IAFhB,EAaEC,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,qBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,qBAV/C,oBAiBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACGF,KAAKR,MAAMC,WAER,oBAAGS,UAAU,eAAb,sCAEGF,KAAKR,MAAMC,WAFd,OAMA,mBAAGS,UAAU,eAAb,2CA5BZ,GAAyBC,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.024d6f24.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends React.Component {\n  state: State = {\n    pressedKey: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handlePressedKeys);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handlePressedKeys);\n  }\n\n  handlePressedKeys = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"App\">\n        {this.state.pressedKey\n          ? (\n            <p className=\"App__message\">\n              The last pressed key is [\n              {this.state.pressedKey}\n              ]\n            </p>\n          )\n          : <p className=\"App__message\">Nothing was pressed yet</p>}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}